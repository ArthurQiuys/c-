//3. Longest Substring Without Repeating Characters
Given a string, find the length of the longest substring without repeating characters.

Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

Subscribe to see which companies asked this question.//
//思路：一次读取字符串的每个字符，如果第一次出现则当前子串长度+1，否则对比当前长度是否大于最长长度，是则替换最大长度。然后寻找重复的字符是在源字符串哪里出现的。//

int lengthOfLongestSubstring(char* s) {
    int maxlen = 0, currlen = 0;
    int table[256], i ,j , start = 0;
    memset(table, 0, sizeof(table));
    for(i=0 ; s[i] != '\0'; i++)
    {
        if((++table[s[i]]) == 2)
        {
            if(currlen > maxlen )
            {
                maxlen = currlen;
            }
            for(j = start ; j < i ; j++)
            {
                if(s[j] == s[i])
                {
                    table[s[j]] = 1;
                    start = j + 1;
                    break;
                }
                else
                {
                    currlen--;
                    table[s[j]] = 0;
                }
            }
        }
        else
        currlen++;
    }
    if(currlen > maxlen)
    {
        maxlen = currlen;
    }
    return maxlen;
}
